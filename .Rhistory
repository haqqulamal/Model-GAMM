head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Convert response variable to factor
data$respon <- factor(data$xr + data$xs + data$xm + data$xp)
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, newdata = data, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, "XR"],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, "XS"],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, "XM"],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, "XP"]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Convert response variable to factor
data$respon <- factor(data$xr + data$xs + data$xm + data$xp)
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ ., data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, newdata = data, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, "XR"],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, "XS"],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, "XM"],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, "XP"]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Convert response variable to factor
data$respon <- factor(data$xr + data$xs + data$xm + data$xp)
# Fit the multinomial logistic regression model using glm() from stats package
model <- glm(respon ~ xr + xs + xm + xp, data = data, family = multinomial)
# Predict probabilities using the fitted model
fitted <- predict(model, newdata = data, type = "response")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, "XR"],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, "XS"],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, "XM"],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, "XP"]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Convert response variable to factor
data$respon <- factor(data$xr + data$xs + data$xm + data$xp)
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, newdata = data, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, "XR"],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, "XS"],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, "XM"],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, "XP"]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Convert response variable to factor
data$respon <- factor(data$xr + data$xs + data$xm + data$xp)
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ ., data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, "XR"],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, "XS"],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, "XM"],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, "XP"]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Convert response variable to factor
data$respon <- factor(data$respon)
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Create a new response variable for multinomial analysis
data$respon <- factor(ifelse(data$xr > 0, "xr",
ifelse(data$xs > 0, "xs",
ifelse(data$xm > 0, "xm", "xp"))))
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Print model summary
summary(model)
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Create a new response variable for multinomial analysis
data$respon <- factor(ifelse(data$xr > 0, "xr",
ifelse(data$xs > 0, "xs",
ifelse(data$xm > 0, "xm", "xp"))))
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Print model summary
summary(model)
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Create a new response variable for multinomial analysis
data$respon <- factor(ifelse(data$xr > 0, "xr",
ifelse(data$xs > 0, "xs",
ifelse(data$xm > 0, "xm", "xp"))))
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(data, respon ~ xr + xs + xm + xp)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Print model summary
summary(model)
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print the first few rows of the mortality table
head(mortality_table)
# Load required libraries
library(mgcv)
library(tidyverse)
library(nnet)  # For multinom function
# Load your dataset and handle missing values and conversion issues
data <- read.csv("tb.csv", sep = ";", na.strings = c("", "NA"))
# Convert xr, xs, xm, xp to numeric and replace NA with 0
data$xr <- as.numeric(gsub(",", ".", data$xr))
data$xs <- as.numeric(gsub(",", ".", data$xs))
data$xm <- as.numeric(gsub(",", ".", data$xm))
data$xp <- as.numeric(gsub(",", ".", data$xp))
data$xr[is.na(data$xr)] <- 0
data$xs[is.na(data$xs)] <- 0
data$xm[is.na(data$xm)] <- 0
data$xp[is.na(data$xp)] <- 0
# Fit the multinomial logistic regression model using multinom() from nnet package
model <- multinom(respon ~ xr + xs + xm + xp, data = data)
# Predict probabilities using the fitted model
fitted <- predict(model, type = "probs")
# Create a data frame for multi-decrement mortality table
mortality_table <- data.frame(
Usia = data$usia,                # Usia
Mortalitas_Kasar_XR = data$xr,   # Mortalitas kasar untuk penyebab XR
Mortalitas_Kasar_XS = data$xs,   # Mortalitas kasar untuk penyebab XS
Mortalitas_Kasar_XM = data$xm,   # Mortalitas kasar untuk penyebab XM
Mortalitas_Kasar_XP = data$xp,   # Mortalitas kasar untuk penyebab XP
Probabilitas_Halus_XR = fitted[, 1],  # Probabilitas mortalitas halus XR berdasarkan model
Probabilitas_Halus_XS = fitted[, 2],  # Probabilitas mortalitas halus XS berdasarkan model
Probabilitas_Halus_XM = fitted[, 3],  # Probabilitas mortalitas halus XM berdasarkan model
Probabilitas_Halus_XP = fitted[, 4]   # Probabilitas mortalitas halus XP berdasarkan model
)
# Print model summary
summary(model)
# Print the first few rows of the mortality table
head(mortality_table)
